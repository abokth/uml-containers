#!/bin/bash

set -e; set -o pipefail

cleanup() {
    umount /afs || :
    exec /app/bin/halt
}
trap cleanup EXIT

declare NO_HALT=""
declare AFS_CELL=""
while (( $# > 0 )); do
    case "$1" in
        --)
	   shift; break; ;;
	--afs-cell)
	    shift; AFS_CELL="$1"
	    shift; ;;
	--afs-cell=*)
	    AFS_CELL="$1"
	    AFS_CELL="${AFS_CELL#*=}"
	    shift; ;;
	--no-halt)
	    shift; NO_HALT=true; ;;
	*)
	    cat >&2 <<EOF
Unknown option: $1
Valid arguments:
  [--afs-cell=<cell>] [--no-halt] [-- cmd ...]
EOF
	    exit 1; ;;
    esac
done


# Configure system.
mount -t tmpfs -o rw,seclabel,nosuid,nodev,size=$((MEMTOTALKB/2))k,nr_inodes=1048576,inode64 tmpfs /tmp || :
mount -t proc -o rw,nosuid,nodev,noexec,relatime proc /proc || :
mount -t sysfs -o rw,seclabel,nosuid,nodev,noexec,relatime sysfs /sys || :
mkdir -p /dev/shm || :
mount -t tmpfs -o rw,seclabel,nosuid,nodev,size=$((MEMTOTALKB/2))k,nr_inodes=1048576,inode64 tmpfs /dev/shm || :
mkdir -p /dev/pts || :
mount -t devpts -o rw,seclabel,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000 devpts /dev/pts || :
mount -t tmpfs -o rw,seclabel,nosuid,nodev,size=$((MEMTOTALKB/2))k,nr_inodes=819200,mode=755,inode64 tmpfs /run || :
mount -t cgroup2 -o rw,seclabel,nosuid,nodev,noexec,relatime,nsdelegate,memory_recursiveprot cgroup2 /sys/fs/cgroup || :
mount -t pstore -o rw,seclabel,nosuid,nodev,noexec,relatime pstore /sys/fs/pstore || :


# Configure and mount AFS.
mkdir -p /afs
if [[ -n "$AFS_CELL" ]]; then
    cat >>/etc/kafs/client.d/thiscell.conf <<EOF
[default]
thiscell = $AFS_CELL
EOF
else
    AFS_CELL=$(sed -nre </etc/kafs/client.d/thiscell.conf 's,^thiscell *= *,,p')
fi
host -t AFSDB "$AFS_CELL" >/dev/null 2>&1 || :
/sbin/modprobe -q kafs
/usr/libexec/kafs-preload
echo "$AFS_CELL" >/proc/fs/afs/rootcell
mount -t afs none /afs -o dyn

declare -a CMD=()
if (( $# == 0 )); then
    CMD+=("/bin/bash" "-l")
fi

# /app/bin/halt must be run elsewhere to exit the container.
if [[ -n "$NO_HALT" ]]; then
    exec "${CMD[@]}" "$@"
fi

"${CMD[@]}" "$@"

