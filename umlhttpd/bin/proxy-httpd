#!/bin/bash

set -e; set -o pipefail

proxypid=$$
if [[ "$proxypid" == "1" ]]; then
    # pid 1 does not have default signal handlers, cannot kill systemd-socket-proxyd
    echo >&2 "Warning: Run container with --init to enable shutdown on httpd errors."
fi

# Does not work.
echo 'RemoteIPInternalProxy fd::/8' >/etc/httpd/conf.d/zz-10-internalproxy.conf

{
    if /app/bin/container-init -- -- /app/bin/run-httpd 3</dev/null; then
	echo "Exiting."
    else
	echo >&2 "httpd failure"
    fi
    echo "Stopping process $proxypid"
    kill -HUP $proxypid
    sleep 1
    kill -TERM $proxypid
    sleep 1
    kill -KILL $proxypid
} &

for t in 1 1 1 1 1 1 1 1 1 2 3 5 8 13 21 34 0; do
    if [[ -s /run/server-ip ]]; then
	server_ip=$(cat /run/server-ip)
	if timeout 4 curl --head --fail --silent -o /dev/null "http://[$server_ip]:80/"; then break; fi
    fi
    if [[ "$t" == "0" ]]; then
	echo >&2 "Startup timeout."
	exit 1
    fi
    sleep $t
done

{
    while kill -0 $$; do
	for t in 1 1 1 2 3 0; do
	    if timeout 4 curl --head --fail --silent -o /dev/null "http://[$server_ip]:80/"; then break; fi
	    if [[ "$t" == "0" ]]; then
		echo >&2 "Health check failed."
		kill $proxypid
		exit 1
	    fi
	    sleep $t
	done
	sleep 60
    done
} &

exec /usr/lib/systemd/systemd-socket-proxyd --exit-idle-time=5min "$server_ip":80
